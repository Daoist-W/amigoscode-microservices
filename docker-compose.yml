services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: isikodon
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - "9411:9411"
    networks:
      - spring

#  rabbitmq:
#    image: rabbitmq:3.9.11-management-alpine
#    container_name: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    networks:
#      - spring

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - spring
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - spring

#  eureka-server:
#    image: daoistw/eureka-server:latest
#    container_name: eureka-server
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin

#  api-gateway:
#    image: daoistw/api-gateway:latest
#    container_name: api-gateway
#    ports:
#      - "8083:8083"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    networks:
#      - spring
#    depends_on:
#      - zipkin
#      - eureka-server


  customer:
    image: daoistw/customer:latest
    container_name: customer
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres
      - kafka
#      - rabbitmq

  fraud:
    image: daoistw/fraud:latest
    container_name: fraud
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres

  notification:
    image: daoistw/notification:latest
    container_name: notification
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres
      - kafka
#      - rabbitmq

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge


volumes:
  postgres:
  pgadmin: